\name{ffdiag}
\alias{ffdiag}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{Joint Approximate Diagonalization of a set of square, symmetric
and real-valued matrices}
\description{
  This function performs a Joint Approximate Diagonalization of a set of
square and real-valued matrices. 
}
\usage{
ffdiag(C0, V0 = NULL, eps = .Machine$double.eps, itermax = 200, 
		keepTrace = FALSE)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{C0}{DOUBLE ARRAY (KxKxN). Three-dimensional array with dimensions 
KxKxN representing the set
of square and real-valued matrices to be jointly diagonalized. 
N is the number of matrices. Matrices
are KxK square matrices.}
  \item{V0}{DOUBLE MATRIX (KxK). The initial guess of a joint 
diagonalizer. If NULL, an initial
guess is automatically generated by the algorithm.}
  \item{eps}{DOUBLE. The algorithm stops when the criterium difference 
between two
iterations is less than eps.}
  \item{itermax}{INTEGER. Alternatively, the algorithm stops when itermax 
sweeps have
been performed without reaching convergence. If the maximum number of
iteration is performed, a warning appears.}
  \item{keepTrace}{BOOLEAN. Do we want to keep the successive estimations of 
the joint diagonalizer.}
}
\details{
  Given a set \eqn{C_i} of N KxK real-valued matrices, the
algorithm is looking for a matrix \eqn{B} such that
\eqn{\forall i \in [1,N]}, \eqn{B C_i B^T} is as close as possible of a
diagonal matrix. 
}
\value{
  \item{B}{Estimation of the Joint Diagonalizer.}
  \item{criter}{Successive estimates of the cost function across sweeps.}
  \item{B_trace}{Array of the successive estimates of B across iterations.}
}
\references{A. Ziehe, P. Laskov, G. Nolte and K.-R. Mueller;
A Fast Algorithm for Joint Diagonalization with Non-orthogonal
Transformations and its Application to Blind Source Separation;
Journal of Machine Learning Research vol 5, pages 777-800, 2004}
\author{Cedric Gouy-Pailler (cedric.gouypailler@gmail.com), 
from the initial matlab code by A. Ziehe.}
\examples{
# generating diagonal matrices
D <- replicate(30, diag(rchisq(df=1,n=10)), simplify=FALSE)
# Mixing and demixing matrices
B <- matrix(rnorm(100),10,10)
A <- solve(B)
C <- array(NA,dim=c(10,10,30))
for (i in 1:30) C[,,i] <- A \%*\% D[[i]] \%*\% t(A)
B_est <- ffdiag(C)$B
# B_est should be an approximate of B=solve(A)
B_est \%*\% A
# close to a permutation matrix (with random scales)
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{algebra}




